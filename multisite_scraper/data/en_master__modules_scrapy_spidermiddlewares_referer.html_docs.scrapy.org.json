{
  "url": "https://docs.scrapy.org/en/master/_modules/scrapy/spidermiddlewares/referer.html",
  "title": "scrapy.spidermiddlewares.referer — Scrapy 2.11.2 documentation",
  "content": [
    {
      "type": "text",
      "content": "First steps"
    },
    {
      "type": "text",
      "content": "Scrapy at a glance"
    },
    {
      "type": "text",
      "content": "Installation guide"
    },
    {
      "type": "text",
      "content": "Scrapy Tutorial"
    },
    {
      "type": "text",
      "content": "Examples"
    },
    {
      "type": "text",
      "content": "Basic concepts"
    },
    {
      "type": "text",
      "content": "Command line tool"
    },
    {
      "type": "text",
      "content": "Spiders"
    },
    {
      "type": "text",
      "content": "Selectors"
    },
    {
      "type": "text",
      "content": "Items"
    },
    {
      "type": "text",
      "content": "Item Loaders"
    },
    {
      "type": "text",
      "content": "Scrapy shell"
    },
    {
      "type": "text",
      "content": "Item Pipeline"
    },
    {
      "type": "text",
      "content": "Feed exports"
    },
    {
      "type": "text",
      "content": "Requests and Responses"
    },
    {
      "type": "text",
      "content": "Link Extractors"
    },
    {
      "type": "text",
      "content": "Settings"
    },
    {
      "type": "text",
      "content": "Exceptions"
    },
    {
      "type": "text",
      "content": "Built-in services"
    },
    {
      "type": "text",
      "content": "Logging"
    },
    {
      "type": "text",
      "content": "Stats Collection"
    },
    {
      "type": "text",
      "content": "Sending e-mail"
    },
    {
      "type": "text",
      "content": "Telnet Console"
    },
    {
      "type": "text",
      "content": "Solving specific problems"
    },
    {
      "type": "text",
      "content": "Frequently Asked Questions"
    },
    {
      "type": "text",
      "content": "Debugging Spiders"
    },
    {
      "type": "text",
      "content": "Spiders Contracts"
    },
    {
      "type": "text",
      "content": "Common Practices"
    },
    {
      "type": "text",
      "content": "Broad Crawls"
    },
    {
      "type": "text",
      "content": "Using your browser’s Developer Tools for scraping"
    },
    {
      "type": "text",
      "content": "Selecting dynamically-loaded content"
    },
    {
      "type": "text",
      "content": "Debugging memory leaks"
    },
    {
      "type": "text",
      "content": "Downloading and processing files and images"
    },
    {
      "type": "text",
      "content": "Deploying Spiders"
    },
    {
      "type": "text",
      "content": "AutoThrottle extension"
    },
    {
      "type": "text",
      "content": "Benchmarking"
    },
    {
      "type": "text",
      "content": "Jobs: pausing and resuming crawls"
    },
    {
      "type": "text",
      "content": "Coroutines"
    },
    {
      "type": "text",
      "content": "asyncio"
    },
    {
      "type": "text",
      "content": "Extending Scrapy"
    },
    {
      "type": "text",
      "content": "Architecture overview"
    },
    {
      "type": "text",
      "content": "Add-ons"
    },
    {
      "type": "text",
      "content": "Downloader Middleware"
    },
    {
      "type": "text",
      "content": "Spider Middleware"
    },
    {
      "type": "text",
      "content": "Extensions"
    },
    {
      "type": "text",
      "content": "Signals"
    },
    {
      "type": "text",
      "content": "Scheduler"
    },
    {
      "type": "text",
      "content": "Item Exporters"
    },
    {
      "type": "text",
      "content": "Components"
    },
    {
      "type": "text",
      "content": "Core API"
    },
    {
      "type": "text",
      "content": "All the rest"
    },
    {
      "type": "text",
      "content": "Release notes"
    },
    {
      "type": "text",
      "content": "Contributing to Scrapy"
    },
    {
      "type": "text",
      "content": "Versioning and API stability"
    },
    {
      "type": "text",
      "content": null
    },
    {
      "type": "text",
      "content": "Module code"
    },
    {
      "type": "text",
      "content": "scrapy.spidermiddlewares.referer"
    },
    {
      "type": "text",
      "content": "\n      "
    },
    {
      "type": "text",
      "content": "Source code for scrapy.spidermiddlewares.referer"
    },
    {
      "type": "code",
      "content": "<pre>\n<span></span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">RefererMiddleware: populates Request referer field, based on the Response which</span>\n<span class=\"sd\">originated it.</span>\n<span class=\"sd\">\"\"\"</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">TYPE_CHECKING</span><span class=\"p\">,</span>\n    <span class=\"n\">Any</span><span class=\"p\">,</span>\n    <span class=\"n\">AsyncIterable</span><span class=\"p\">,</span>\n    <span class=\"n\">Dict</span><span class=\"p\">,</span>\n    <span class=\"n\">Iterable</span><span class=\"p\">,</span>\n    <span class=\"n\">Optional</span><span class=\"p\">,</span>\n    <span class=\"n\">Tuple</span><span class=\"p\">,</span>\n    <span class=\"n\">Type</span><span class=\"p\">,</span>\n    <span class=\"n\">Union</span><span class=\"p\">,</span>\n    <span class=\"n\">cast</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">urllib.parse</span> <span class=\"kn\">import</span> <span class=\"n\">urlparse</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">w3lib.url</span> <span class=\"kn\">import</span> <span class=\"n\">safe_url_string</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">scrapy</span> <span class=\"kn\">import</span> <span class=\"n\">Spider</span><span class=\"p\">,</span> <span class=\"n\">signals</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scrapy.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">NotConfigured</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scrapy.http</span> <span class=\"kn\">import</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">Response</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scrapy.utils.misc</span> <span class=\"kn\">import</span> <span class=\"n\">load_object</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scrapy.utils.python</span> <span class=\"kn\">import</span> <span class=\"n\">to_unicode</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scrapy.utils.url</span> <span class=\"kn\">import</span> <span class=\"n\">strip_url</span>\n\n<span class=\"k\">if</span> <span class=\"n\">TYPE_CHECKING</span><span class=\"p\">:</span>\n    <span class=\"c1\"># typing.Self requires Python 3.11</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">typing_extensions</span> <span class=\"kn\">import</span> <span class=\"n\">Self</span>\n\n    <span class=\"kn\">from</span> <span class=\"nn\">scrapy.crawler</span> <span class=\"kn\">import</span> <span class=\"n\">Crawler</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">scrapy.settings</span> <span class=\"kn\">import</span> <span class=\"n\">BaseSettings</span>\n\n\n<span class=\"n\">LOCAL_SCHEMES</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s2\">\"about\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"blob\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"data\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"filesystem\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">POLICY_NO_REFERRER</span> <span class=\"o\">=</span> <span class=\"s2\">\"no-referrer\"</span>\n<span class=\"n\">POLICY_NO_REFERRER_WHEN_DOWNGRADE</span> <span class=\"o\">=</span> <span class=\"s2\">\"no-referrer-when-downgrade\"</span>\n<span class=\"n\">POLICY_SAME_ORIGIN</span> <span class=\"o\">=</span> <span class=\"s2\">\"same-origin\"</span>\n<span class=\"n\">POLICY_ORIGIN</span> <span class=\"o\">=</span> <span class=\"s2\">\"origin\"</span>\n<span class=\"n\">POLICY_STRICT_ORIGIN</span> <span class=\"o\">=</span> <span class=\"s2\">\"strict-origin\"</span>\n<span class=\"n\">POLICY_ORIGIN_WHEN_CROSS_ORIGIN</span> <span class=\"o\">=</span> <span class=\"s2\">\"origin-when-cross-origin\"</span>\n<span class=\"n\">POLICY_STRICT_ORIGIN_WHEN_CROSS_ORIGIN</span> <span class=\"o\">=</span> <span class=\"s2\">\"strict-origin-when-cross-origin\"</span>\n<span class=\"n\">POLICY_UNSAFE_URL</span> <span class=\"o\">=</span> <span class=\"s2\">\"unsafe-url\"</span>\n<span class=\"n\">POLICY_SCRAPY_DEFAULT</span> <span class=\"o\">=</span> <span class=\"s2\">\"scrapy-default\"</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ReferrerPolicy</span><span class=\"p\">:</span>\n    <span class=\"n\">NOREFERRER_SCHEMES</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">LOCAL_SCHEMES</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">referrer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">request_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">stripped_referrer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">if</span> <span class=\"n\">urlparse</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">scheme</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">NOREFERRER_SCHEMES</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">strip_url</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">origin_referrer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">if</span> <span class=\"n\">urlparse</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">scheme</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">NOREFERRER_SCHEMES</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">strip_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">origin_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        https://www.w3.org/TR/referrer-policy/#strip-url</span>\n\n<span class=\"sd\">        If url is null, return no referrer.</span>\n<span class=\"sd\">        If url's scheme is a local scheme, then return no referrer.</span>\n<span class=\"sd\">        Set url's username to the empty string.</span>\n<span class=\"sd\">        Set url's password to null.</span>\n<span class=\"sd\">        Set url's fragment to null.</span>\n<span class=\"sd\">        If the origin-only flag is true, then:</span>\n<span class=\"sd\">            Set url's path to null.</span>\n<span class=\"sd\">            Set url's query to null.</span>\n<span class=\"sd\">        Return url.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">url</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"n\">strip_url</span><span class=\"p\">(</span>\n            <span class=\"n\">url</span><span class=\"p\">,</span>\n            <span class=\"n\">strip_credentials</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">strip_fragment</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">strip_default_port</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">origin_only</span><span class=\"o\">=</span><span class=\"n\">origin_only</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">origin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">\"\"\"Return serialized origin (scheme, host, path) for a request or response URL.\"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">strip_url</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">origin_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">potentially_trustworthy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Note: this does not follow https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy</span>\n        <span class=\"n\">parsed_url</span> <span class=\"o\">=</span> <span class=\"n\">urlparse</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">parsed_url</span><span class=\"o\">.</span><span class=\"n\">scheme</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">\"data\"</span><span class=\"p\">,):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tls_protected</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">tls_protected</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">urlparse</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">scheme</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">\"https\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ftps\"</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"NoReferrerPolicy\"><a class=\"viewcode-back\" href=\"../../../topics/spider-middleware.html#scrapy.spidermiddlewares.referer.NoReferrerPolicy\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">NoReferrerPolicy</span><span class=\"p\">(</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    https://www.w3.org/TR/referrer-policy/#referrer-policy-no-referrer</span>\n\n<span class=\"sd\">    The simplest policy is \"no-referrer\", which specifies that no referrer information</span>\n<span class=\"sd\">    is to be sent along with requests made from a particular request client to any origin.</span>\n<span class=\"sd\">    The header will be omitted entirely.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">POLICY_NO_REFERRER</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">referrer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">request_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n\n<div class=\"viewcode-block\" id=\"NoReferrerWhenDowngradePolicy\"><a class=\"viewcode-back\" href=\"../../../topics/spider-middleware.html#scrapy.spidermiddlewares.referer.NoReferrerWhenDowngradePolicy\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">NoReferrerWhenDowngradePolicy</span><span class=\"p\">(</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    https://www.w3.org/TR/referrer-policy/#referrer-policy-no-referrer-when-downgrade</span>\n\n<span class=\"sd\">    The \"no-referrer-when-downgrade\" policy sends a full URL along with requests</span>\n<span class=\"sd\">    from a TLS-protected environment settings object to a potentially trustworthy URL,</span>\n<span class=\"sd\">    and requests from clients which are not TLS-protected to any origin.</span>\n\n<span class=\"sd\">    Requests from TLS-protected clients to non-potentially trustworthy URLs,</span>\n<span class=\"sd\">    on the other hand, will contain no referrer information.</span>\n<span class=\"sd\">    A Referer HTTP header will not be sent.</span>\n\n<span class=\"sd\">    This is a user agent's default behavior, if no policy is otherwise specified.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">POLICY_NO_REFERRER_WHEN_DOWNGRADE</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">referrer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">request_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tls_protected</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tls_protected</span><span class=\"p\">(</span><span class=\"n\">request_url</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stripped_referrer</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n\n<div class=\"viewcode-block\" id=\"SameOriginPolicy\"><a class=\"viewcode-back\" href=\"../../../topics/spider-middleware.html#scrapy.spidermiddlewares.referer.SameOriginPolicy\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">SameOriginPolicy</span><span class=\"p\">(</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    https://www.w3.org/TR/referrer-policy/#referrer-policy-same-origin</span>\n\n<span class=\"sd\">    The \"same-origin\" policy specifies that a full URL, stripped for use as a referrer,</span>\n<span class=\"sd\">    is sent as referrer information when making same-origin requests from a particular request client.</span>\n\n<span class=\"sd\">    Cross-origin requests, on the other hand, will contain no referrer information.</span>\n<span class=\"sd\">    A Referer HTTP header will not be sent.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">POLICY_SAME_ORIGIN</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">referrer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">request_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin</span><span class=\"p\">(</span><span class=\"n\">request_url</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stripped_referrer</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n\n<div class=\"viewcode-block\" id=\"OriginPolicy\"><a class=\"viewcode-back\" href=\"../../../topics/spider-middleware.html#scrapy.spidermiddlewares.referer.OriginPolicy\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">OriginPolicy</span><span class=\"p\">(</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    https://www.w3.org/TR/referrer-policy/#referrer-policy-origin</span>\n\n<span class=\"sd\">    The \"origin\" policy specifies that only the ASCII serialization</span>\n<span class=\"sd\">    of the origin of the request client is sent as referrer information</span>\n<span class=\"sd\">    when making both same-origin requests and cross-origin requests</span>\n<span class=\"sd\">    from a particular request client.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">POLICY_ORIGIN</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">referrer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">request_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin_referrer</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"StrictOriginPolicy\"><a class=\"viewcode-back\" href=\"../../../topics/spider-middleware.html#scrapy.spidermiddlewares.referer.StrictOriginPolicy\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">StrictOriginPolicy</span><span class=\"p\">(</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    https://www.w3.org/TR/referrer-policy/#referrer-policy-strict-origin</span>\n\n<span class=\"sd\">    The \"strict-origin\" policy sends the ASCII serialization</span>\n<span class=\"sd\">    of the origin of the request client when making requests:</span>\n<span class=\"sd\">    - from a TLS-protected environment settings object to a potentially trustworthy URL, and</span>\n<span class=\"sd\">    - from non-TLS-protected environment settings objects to any origin.</span>\n\n<span class=\"sd\">    Requests from TLS-protected request clients to non- potentially trustworthy URLs,</span>\n<span class=\"sd\">    on the other hand, will contain no referrer information.</span>\n<span class=\"sd\">    A Referer HTTP header will not be sent.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">POLICY_STRICT_ORIGIN</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">referrer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">request_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tls_protected</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n            <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">potentially_trustworthy</span><span class=\"p\">(</span><span class=\"n\">request_url</span><span class=\"p\">)</span>\n            <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tls_protected</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin_referrer</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n\n<div class=\"viewcode-block\" id=\"OriginWhenCrossOriginPolicy\"><a class=\"viewcode-back\" href=\"../../../topics/spider-middleware.html#scrapy.spidermiddlewares.referer.OriginWhenCrossOriginPolicy\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">OriginWhenCrossOriginPolicy</span><span class=\"p\">(</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    https://www.w3.org/TR/referrer-policy/#referrer-policy-origin-when-cross-origin</span>\n\n<span class=\"sd\">    The \"origin-when-cross-origin\" policy specifies that a full URL,</span>\n<span class=\"sd\">    stripped for use as a referrer, is sent as referrer information</span>\n<span class=\"sd\">    when making same-origin requests from a particular request client,</span>\n<span class=\"sd\">    and only the ASCII serialization of the origin of the request client</span>\n<span class=\"sd\">    is sent as referrer information when making cross-origin requests</span>\n<span class=\"sd\">    from a particular request client.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">POLICY_ORIGIN_WHEN_CROSS_ORIGIN</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">referrer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">request_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"n\">origin</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">origin</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin</span><span class=\"p\">(</span><span class=\"n\">request_url</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stripped_referrer</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">origin</span></div>\n\n\n<div class=\"viewcode-block\" id=\"StrictOriginWhenCrossOriginPolicy\"><a class=\"viewcode-back\" href=\"../../../topics/spider-middleware.html#scrapy.spidermiddlewares.referer.StrictOriginWhenCrossOriginPolicy\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">StrictOriginWhenCrossOriginPolicy</span><span class=\"p\">(</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    https://www.w3.org/TR/referrer-policy/#referrer-policy-strict-origin-when-cross-origin</span>\n\n<span class=\"sd\">    The \"strict-origin-when-cross-origin\" policy specifies that a full URL,</span>\n<span class=\"sd\">    stripped for use as a referrer, is sent as referrer information</span>\n<span class=\"sd\">    when making same-origin requests from a particular request client,</span>\n<span class=\"sd\">    and only the ASCII serialization of the origin of the request client</span>\n<span class=\"sd\">    when making cross-origin requests:</span>\n\n<span class=\"sd\">    - from a TLS-protected environment settings object to a potentially trustworthy URL, and</span>\n<span class=\"sd\">    - from non-TLS-protected environment settings objects to any origin.</span>\n\n<span class=\"sd\">    Requests from TLS-protected clients to non- potentially trustworthy URLs,</span>\n<span class=\"sd\">    on the other hand, will contain no referrer information.</span>\n<span class=\"sd\">    A Referer HTTP header will not be sent.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">POLICY_STRICT_ORIGIN_WHEN_CROSS_ORIGIN</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">referrer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">request_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"n\">origin</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">origin</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin</span><span class=\"p\">(</span><span class=\"n\">request_url</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stripped_referrer</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tls_protected</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n            <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">potentially_trustworthy</span><span class=\"p\">(</span><span class=\"n\">request_url</span><span class=\"p\">)</span>\n            <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tls_protected</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin_referrer</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n\n<div class=\"viewcode-block\" id=\"UnsafeUrlPolicy\"><a class=\"viewcode-back\" href=\"../../../topics/spider-middleware.html#scrapy.spidermiddlewares.referer.UnsafeUrlPolicy\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">UnsafeUrlPolicy</span><span class=\"p\">(</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    https://www.w3.org/TR/referrer-policy/#referrer-policy-unsafe-url</span>\n\n<span class=\"sd\">    The \"unsafe-url\" policy specifies that a full URL, stripped for use as a referrer,</span>\n<span class=\"sd\">    is sent along with both cross-origin requests</span>\n<span class=\"sd\">    and same-origin requests made from a particular request client.</span>\n\n<span class=\"sd\">    Note: The policy's name doesn't lie; it is unsafe.</span>\n<span class=\"sd\">    This policy will leak origins and paths from TLS-protected resources</span>\n<span class=\"sd\">    to insecure origins.</span>\n<span class=\"sd\">    Carefully consider the impact of setting such a policy for potentially sensitive documents.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">POLICY_UNSAFE_URL</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">referrer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">request_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stripped_referrer</span><span class=\"p\">(</span><span class=\"n\">response_url</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"DefaultReferrerPolicy\"><a class=\"viewcode-back\" href=\"../../../topics/spider-middleware.html#scrapy.spidermiddlewares.referer.DefaultReferrerPolicy\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">DefaultReferrerPolicy</span><span class=\"p\">(</span><span class=\"n\">NoReferrerWhenDowngradePolicy</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    A variant of \"no-referrer-when-downgrade\",</span>\n<span class=\"sd\">    with the addition that \"Referer\" is not sent if the parent request was</span>\n<span class=\"sd\">    using ``file://`` or ``s3://`` scheme.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"n\">NOREFERRER_SCHEMES</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">LOCAL_SCHEMES</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"s2\">\"file\"</span><span class=\"p\">,</span> <span class=\"s2\">\"s3\"</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">POLICY_SCRAPY_DEFAULT</span></div>\n\n\n<span class=\"n\">_policy_classes</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">p</span>\n    <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"p\">(</span>\n        <span class=\"n\">NoReferrerPolicy</span><span class=\"p\">,</span>\n        <span class=\"n\">NoReferrerWhenDowngradePolicy</span><span class=\"p\">,</span>\n        <span class=\"n\">SameOriginPolicy</span><span class=\"p\">,</span>\n        <span class=\"n\">OriginPolicy</span><span class=\"p\">,</span>\n        <span class=\"n\">StrictOriginPolicy</span><span class=\"p\">,</span>\n        <span class=\"n\">OriginWhenCrossOriginPolicy</span><span class=\"p\">,</span>\n        <span class=\"n\">StrictOriginWhenCrossOriginPolicy</span><span class=\"p\">,</span>\n        <span class=\"n\">UnsafeUrlPolicy</span><span class=\"p\">,</span>\n        <span class=\"n\">DefaultReferrerPolicy</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># Reference: https://www.w3.org/TR/referrer-policy/#referrer-policy-empty-string</span>\n<span class=\"n\">_policy_classes</span><span class=\"p\">[</span><span class=\"s2\">\"\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">NoReferrerWhenDowngradePolicy</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_load_policy_class</span><span class=\"p\">(</span>\n    <span class=\"n\">policy</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">warning_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">]]:</span>\n<span class=\"w\">    </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Expect a string for the path to the policy class,</span>\n<span class=\"sd\">    otherwise try to interpret the string as a standard value</span>\n<span class=\"sd\">    from https://www.w3.org/TR/referrer-policy/#referrer-policies</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">],</span> <span class=\"n\">load_object</span><span class=\"p\">(</span><span class=\"n\">policy</span><span class=\"p\">))</span>\n    <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n        <span class=\"n\">tokens</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">token</span> <span class=\"ow\">in</span> <span class=\"n\">policy</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">\",\"</span><span class=\"p\">)]</span>\n        <span class=\"c1\"># https://www.w3.org/TR/referrer-policy/#parse-referrer-policy-from-header</span>\n        <span class=\"k\">for</span> <span class=\"n\">token</span> <span class=\"ow\">in</span> <span class=\"n\">tokens</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"n\">token</span> <span class=\"ow\">in</span> <span class=\"n\">_policy_classes</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">_policy_classes</span><span class=\"p\">[</span><span class=\"n\">token</span><span class=\"p\">]</span>\n\n        <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">\"Could not load referrer policy </span><span class=\"si\">{</span><span class=\"n\">policy</span><span class=\"si\">!r}</span><span class=\"s2\">\"</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">warning_only</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"ne\">RuntimeWarning</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n\n<div class=\"viewcode-block\" id=\"RefererMiddleware\"><a class=\"viewcode-back\" href=\"../../../topics/spider-middleware.html#scrapy.spidermiddlewares.referer.RefererMiddleware\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">RefererMiddleware</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">BaseSettings</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_policy</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">ReferrerPolicy</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">DefaultReferrerPolicy</span>\n        <span class=\"k\">if</span> <span class=\"n\">settings</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">settings_policy</span> <span class=\"o\">=</span> <span class=\"n\">_load_policy_class</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"REFERRER_POLICY\"</span><span class=\"p\">))</span>\n            <span class=\"k\">assert</span> <span class=\"n\">settings_policy</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_policy</span> <span class=\"o\">=</span> <span class=\"n\">settings_policy</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_crawler</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">crawler</span><span class=\"p\">:</span> <span class=\"n\">Crawler</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Self</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">crawler</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">getbool</span><span class=\"p\">(</span><span class=\"s2\">\"REFERER_ENABLED\"</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"n\">NotConfigured</span>\n        <span class=\"n\">mw</span> <span class=\"o\">=</span> <span class=\"bp\">cls</span><span class=\"p\">(</span><span class=\"n\">crawler</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Note: this hook is a bit of a hack to intercept redirections</span>\n        <span class=\"n\">crawler</span><span class=\"o\">.</span><span class=\"n\">signals</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">mw</span><span class=\"o\">.</span><span class=\"n\">request_scheduled</span><span class=\"p\">,</span> <span class=\"n\">signal</span><span class=\"o\">=</span><span class=\"n\">signals</span><span class=\"o\">.</span><span class=\"n\">request_scheduled</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">mw</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">policy</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">resp_or_url</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Response</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">Request</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ReferrerPolicy</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Determine Referrer-Policy to use from a parent Response (or URL),</span>\n<span class=\"sd\">        and a Request to be sent.</span>\n\n<span class=\"sd\">        - if a valid policy is set in Request meta, it is used.</span>\n<span class=\"sd\">        - if the policy is set in meta but is wrong (e.g. a typo error),</span>\n<span class=\"sd\">          the policy from settings is used</span>\n<span class=\"sd\">        - if the policy is not set in Request meta,</span>\n<span class=\"sd\">          but there is a Referrer-policy header in the parent response,</span>\n<span class=\"sd\">          it is used if valid</span>\n<span class=\"sd\">        - otherwise, the policy from settings is used.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"n\">policy_name</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"referrer_policy\"</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">policy_name</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">resp_or_url</span><span class=\"p\">,</span> <span class=\"n\">Response</span><span class=\"p\">):</span>\n                <span class=\"n\">policy_header</span> <span class=\"o\">=</span> <span class=\"n\">resp_or_url</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"Referrer-Policy\"</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">policy_header</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                    <span class=\"n\">policy_name</span> <span class=\"o\">=</span> <span class=\"n\">to_unicode</span><span class=\"p\">(</span><span class=\"n\">policy_header</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">\"latin1\"</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">policy_name</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_policy</span><span class=\"p\">()</span>\n\n        <span class=\"bp\">cls</span> <span class=\"o\">=</span> <span class=\"n\">_load_policy_class</span><span class=\"p\">(</span><span class=\"n\">policy_name</span><span class=\"p\">,</span> <span class=\"n\">warning_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"bp\">cls</span> <span class=\"k\">else</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_policy</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">process_spider_output</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Response</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">spider</span><span class=\"p\">:</span> <span class=\"n\">Spider</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_set_referer</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">process_spider_output_async</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Response</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">:</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">spider</span><span class=\"p\">:</span> <span class=\"n\">Spider</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">AsyncIterable</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]:</span>\n        <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n            <span class=\"k\">yield</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_set_referer</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_set_referer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Response</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Any</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">Request</span><span class=\"p\">):</span>\n            <span class=\"n\">referrer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">policy</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">referrer</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">referrer</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"s2\">\"Referer\"</span><span class=\"p\">,</span> <span class=\"n\">referrer</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">r</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">request_scheduled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">spider</span><span class=\"p\">:</span> <span class=\"n\">Spider</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"c1\"># check redirected request to patch \"Referer\" header if necessary</span>\n        <span class=\"n\">redirected_urls</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"redirect_urls\"</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n        <span class=\"k\">if</span> <span class=\"n\">redirected_urls</span><span class=\"p\">:</span>\n            <span class=\"n\">request_referrer</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"Referer\"</span><span class=\"p\">)</span>\n            <span class=\"c1\"># we don't patch the referrer value if there is none</span>\n            <span class=\"k\">if</span> <span class=\"n\">request_referrer</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"c1\"># the request's referrer header value acts as a surrogate</span>\n                <span class=\"c1\"># for the parent response URL</span>\n                <span class=\"c1\">#</span>\n                <span class=\"c1\"># Note: if the 3xx response contained a Referrer-Policy header,</span>\n                <span class=\"c1\">#       the information is not available using this hook</span>\n                <span class=\"n\">parent_url</span> <span class=\"o\">=</span> <span class=\"n\">safe_url_string</span><span class=\"p\">(</span><span class=\"n\">request_referrer</span><span class=\"p\">)</span>\n                <span class=\"n\">policy_referrer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">policy</span><span class=\"p\">(</span><span class=\"n\">parent_url</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">referrer</span><span class=\"p\">(</span>\n                    <span class=\"n\">parent_url</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">url</span>\n                <span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">policy_referrer</span> <span class=\"o\">!=</span> <span class=\"n\">request_referrer</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">\"latin1\"</span><span class=\"p\">):</span>\n                    <span class=\"k\">if</span> <span class=\"n\">policy_referrer</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">\"Referer\"</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s2\">\"Referer\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">policy_referrer</span></div>\n</pre>"
    },
    {
      "type": "text",
      "content": "© Copyright Scrapy developers.\n      "
    },
    {
      "type": "code",
      "content": "<code>e376c0b3</code>"
    }
  ]
}