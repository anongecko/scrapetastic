{
  "url": "https://docs.scrapy.org/en/master/_modules/scrapy/downloadermiddlewares/httpproxy.html",
  "title": "scrapy.downloadermiddlewares.httpproxy — Scrapy 2.11.2 documentation",
  "content": [
    {
      "type": "text",
      "content": "First steps"
    },
    {
      "type": "text",
      "content": "Scrapy at a glance"
    },
    {
      "type": "text",
      "content": "Installation guide"
    },
    {
      "type": "text",
      "content": "Scrapy Tutorial"
    },
    {
      "type": "text",
      "content": "Examples"
    },
    {
      "type": "text",
      "content": "Basic concepts"
    },
    {
      "type": "text",
      "content": "Command line tool"
    },
    {
      "type": "text",
      "content": "Spiders"
    },
    {
      "type": "text",
      "content": "Selectors"
    },
    {
      "type": "text",
      "content": "Items"
    },
    {
      "type": "text",
      "content": "Item Loaders"
    },
    {
      "type": "text",
      "content": "Scrapy shell"
    },
    {
      "type": "text",
      "content": "Item Pipeline"
    },
    {
      "type": "text",
      "content": "Feed exports"
    },
    {
      "type": "text",
      "content": "Requests and Responses"
    },
    {
      "type": "text",
      "content": "Link Extractors"
    },
    {
      "type": "text",
      "content": "Settings"
    },
    {
      "type": "text",
      "content": "Exceptions"
    },
    {
      "type": "text",
      "content": "Built-in services"
    },
    {
      "type": "text",
      "content": "Logging"
    },
    {
      "type": "text",
      "content": "Stats Collection"
    },
    {
      "type": "text",
      "content": "Sending e-mail"
    },
    {
      "type": "text",
      "content": "Telnet Console"
    },
    {
      "type": "text",
      "content": "Solving specific problems"
    },
    {
      "type": "text",
      "content": "Frequently Asked Questions"
    },
    {
      "type": "text",
      "content": "Debugging Spiders"
    },
    {
      "type": "text",
      "content": "Spiders Contracts"
    },
    {
      "type": "text",
      "content": "Common Practices"
    },
    {
      "type": "text",
      "content": "Broad Crawls"
    },
    {
      "type": "text",
      "content": "Using your browser’s Developer Tools for scraping"
    },
    {
      "type": "text",
      "content": "Selecting dynamically-loaded content"
    },
    {
      "type": "text",
      "content": "Debugging memory leaks"
    },
    {
      "type": "text",
      "content": "Downloading and processing files and images"
    },
    {
      "type": "text",
      "content": "Deploying Spiders"
    },
    {
      "type": "text",
      "content": "AutoThrottle extension"
    },
    {
      "type": "text",
      "content": "Benchmarking"
    },
    {
      "type": "text",
      "content": "Jobs: pausing and resuming crawls"
    },
    {
      "type": "text",
      "content": "Coroutines"
    },
    {
      "type": "text",
      "content": "asyncio"
    },
    {
      "type": "text",
      "content": "Extending Scrapy"
    },
    {
      "type": "text",
      "content": "Architecture overview"
    },
    {
      "type": "text",
      "content": "Add-ons"
    },
    {
      "type": "text",
      "content": "Downloader Middleware"
    },
    {
      "type": "text",
      "content": "Spider Middleware"
    },
    {
      "type": "text",
      "content": "Extensions"
    },
    {
      "type": "text",
      "content": "Signals"
    },
    {
      "type": "text",
      "content": "Scheduler"
    },
    {
      "type": "text",
      "content": "Item Exporters"
    },
    {
      "type": "text",
      "content": "Components"
    },
    {
      "type": "text",
      "content": "Core API"
    },
    {
      "type": "text",
      "content": "All the rest"
    },
    {
      "type": "text",
      "content": "Release notes"
    },
    {
      "type": "text",
      "content": "Contributing to Scrapy"
    },
    {
      "type": "text",
      "content": "Versioning and API stability"
    },
    {
      "type": "text",
      "content": null
    },
    {
      "type": "text",
      "content": "Module code"
    },
    {
      "type": "text",
      "content": "scrapy.downloadermiddlewares.httpproxy"
    },
    {
      "type": "text",
      "content": "\n      "
    },
    {
      "type": "text",
      "content": "Source code for scrapy.downloadermiddlewares.httpproxy"
    },
    {
      "type": "code",
      "content": "<pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">base64</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">TYPE_CHECKING</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n<span class=\"kn\">from</span> <span class=\"nn\">urllib.parse</span> <span class=\"kn\">import</span> <span class=\"n\">unquote</span><span class=\"p\">,</span> <span class=\"n\">urlunparse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">urllib.request</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>  <span class=\"c1\"># type: ignore[attr-defined]</span>\n    <span class=\"n\">_parse_proxy</span><span class=\"p\">,</span>\n    <span class=\"n\">getproxies</span><span class=\"p\">,</span>\n    <span class=\"n\">proxy_bypass</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">scrapy.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">NotConfigured</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scrapy.utils.httpobj</span> <span class=\"kn\">import</span> <span class=\"n\">urlparse_cached</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scrapy.utils.python</span> <span class=\"kn\">import</span> <span class=\"n\">to_bytes</span>\n\n<span class=\"k\">if</span> <span class=\"n\">TYPE_CHECKING</span><span class=\"p\">:</span>\n    <span class=\"c1\"># typing.Self requires Python 3.11</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">typing_extensions</span> <span class=\"kn\">import</span> <span class=\"n\">Self</span>\n\n    <span class=\"kn\">from</span> <span class=\"nn\">scrapy</span> <span class=\"kn\">import</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">Spider</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">scrapy.crawler</span> <span class=\"kn\">import</span> <span class=\"n\">Crawler</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">scrapy.http</span> <span class=\"kn\">import</span> <span class=\"n\">Response</span>\n\n\n<div class=\"viewcode-block\" id=\"HttpProxyMiddleware\"><a class=\"viewcode-back\" href=\"../../../topics/downloader-middleware.html#scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">HttpProxyMiddleware</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">auth_encoding</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"latin-1\"</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auth_encoding</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">auth_encoding</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">proxies</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">type_</span><span class=\"p\">,</span> <span class=\"n\">url</span> <span class=\"ow\">in</span> <span class=\"n\">getproxies</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">proxies</span><span class=\"p\">[</span><span class=\"n\">type_</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_proxy</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"p\">)</span>\n            <span class=\"c1\"># some values such as '/var/run/docker.sock' can't be parsed</span>\n            <span class=\"c1\"># by _parse_proxy and as such should be skipped</span>\n            <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_crawler</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">crawler</span><span class=\"p\">:</span> <span class=\"n\">Crawler</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Self</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">crawler</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">getbool</span><span class=\"p\">(</span><span class=\"s2\">\"HTTPPROXY_ENABLED\"</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"n\">NotConfigured</span>\n        <span class=\"n\">auth_encoding</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">crawler</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"HTTPPROXY_AUTH_ENCODING\"</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"p\">(</span><span class=\"n\">auth_encoding</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_basic_auth_header</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bytes</span><span class=\"p\">:</span>\n        <span class=\"n\">user_pass</span> <span class=\"o\">=</span> <span class=\"n\">to_bytes</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">unquote</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">:</span><span class=\"si\">{</span><span class=\"n\">unquote</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auth_encoding</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">b64encode</span><span class=\"p\">(</span><span class=\"n\">user_pass</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_proxy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">orig_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"n\">proxy_type</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">hostport</span> <span class=\"o\">=</span> <span class=\"n\">_parse_proxy</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n        <span class=\"n\">proxy_url</span> <span class=\"o\">=</span> <span class=\"n\">urlunparse</span><span class=\"p\">((</span><span class=\"n\">proxy_type</span> <span class=\"ow\">or</span> <span class=\"n\">orig_type</span><span class=\"p\">,</span> <span class=\"n\">hostport</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">))</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">user</span><span class=\"p\">:</span>\n            <span class=\"n\">creds</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_basic_auth_header</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">creds</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">creds</span><span class=\"p\">,</span> <span class=\"n\">proxy_url</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">process_request</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">spider</span><span class=\"p\">:</span> <span class=\"n\">Spider</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">Response</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]:</span>\n        <span class=\"n\">creds</span><span class=\"p\">,</span> <span class=\"n\">proxy_url</span><span class=\"p\">,</span> <span class=\"n\">scheme</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"s2\">\"proxy\"</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s2\">\"proxy\"</span><span class=\"p\">]</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">creds</span><span class=\"p\">,</span> <span class=\"n\">proxy_url</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_proxy</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s2\">\"proxy\"</span><span class=\"p\">],</span> <span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">proxies</span><span class=\"p\">:</span>\n            <span class=\"n\">parsed</span> <span class=\"o\">=</span> <span class=\"n\">urlparse_cached</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n            <span class=\"n\">_scheme</span> <span class=\"o\">=</span> <span class=\"n\">parsed</span><span class=\"o\">.</span><span class=\"n\">scheme</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span>\n                <span class=\"c1\"># 'no_proxy' is only supported by http schemes</span>\n                <span class=\"n\">_scheme</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">\"http\"</span><span class=\"p\">,</span> <span class=\"s2\">\"https\"</span><span class=\"p\">)</span>\n                <span class=\"ow\">or</span> <span class=\"p\">(</span><span class=\"n\">parsed</span><span class=\"o\">.</span><span class=\"n\">hostname</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">proxy_bypass</span><span class=\"p\">(</span><span class=\"n\">parsed</span><span class=\"o\">.</span><span class=\"n\">hostname</span><span class=\"p\">))</span>\n            <span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">_scheme</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">proxies</span><span class=\"p\">:</span>\n                <span class=\"n\">scheme</span> <span class=\"o\">=</span> <span class=\"n\">_scheme</span>\n                <span class=\"n\">creds</span><span class=\"p\">,</span> <span class=\"n\">proxy_url</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">proxies</span><span class=\"p\">[</span><span class=\"n\">scheme</span><span class=\"p\">]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_set_proxy_and_creds</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">proxy_url</span><span class=\"p\">,</span> <span class=\"n\">creds</span><span class=\"p\">,</span> <span class=\"n\">scheme</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_set_proxy_and_creds</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">Request</span><span class=\"p\">,</span>\n        <span class=\"n\">proxy_url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span>\n        <span class=\"n\">creds</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">],</span>\n        <span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">scheme</span><span class=\"p\">:</span>\n            <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s2\">\"_scheme_proxy\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">if</span> <span class=\"n\">proxy_url</span><span class=\"p\">:</span>\n            <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s2\">\"proxy\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">proxy_url</span>\n        <span class=\"k\">elif</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"proxy\"</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s2\">\"proxy\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">creds</span><span class=\"p\">:</span>\n            <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s2\">\"Proxy-Authorization\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s2\">\"Basic \"</span> <span class=\"o\">+</span> <span class=\"n\">creds</span>\n            <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s2\">\"_auth_proxy\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">proxy_url</span>\n        <span class=\"k\">elif</span> <span class=\"s2\">\"_auth_proxy\"</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">proxy_url</span> <span class=\"o\">!=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s2\">\"_auth_proxy\"</span><span class=\"p\">]:</span>\n                <span class=\"k\">if</span> <span class=\"sa\">b</span><span class=\"s2\">\"Proxy-Authorization\"</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">:</span>\n                    <span class=\"k\">del</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s2\">\"Proxy-Authorization\"</span><span class=\"p\">]</span>\n                <span class=\"k\">del</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s2\">\"_auth_proxy\"</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"sa\">b</span><span class=\"s2\">\"Proxy-Authorization\"</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">proxy_url</span><span class=\"p\">:</span>\n                <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"p\">[</span><span class=\"s2\">\"_auth_proxy\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">proxy_url</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">del</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s2\">\"Proxy-Authorization\"</span><span class=\"p\">]</span></div>\n</pre>"
    },
    {
      "type": "text",
      "content": "© Copyright Scrapy developers.\n      "
    },
    {
      "type": "code",
      "content": "<code>e376c0b3</code>"
    }
  ]
}